{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction CrearTareaComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.tareaParaEditar ? \"Tarea actualizada exitosamente\" : \"Tarea creada exitosamente\", \" \");\n  }\n}\n\nexport let CrearTareaComponent = /*#__PURE__*/(() => {\n  class CrearTareaComponent {\n    constructor(taskService, appComponent, route) {\n      this.taskService = taskService;\n      this.appComponent = appComponent;\n      this.route = route;\n      this.task = {\n        title: '',\n        details: '',\n        dueDate: '',\n        priority: 'alta' // Puedes establecer la prioridad por defecto aquí\n\n      };\n      this.tareaCreada = false;\n      this.tareaParaEditar = null; // Inicialmente, no estás editando una tarea existente\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        const taskId = params['taskId'];\n\n        if (taskId) {\n          // Cargar los datos de la tarea a editar\n          this.loadTaskForEditing(taskId);\n        }\n      });\n    }\n\n    loadTaskForEditing(taskId) {\n      this.taskService.getTaskById(taskId).subscribe(response => {\n        this.tareaParaEditar = response;\n        this.task = { ...response\n        }; // Copia los datos de la tarea a editar al formulario\n      }, error => {\n        console.error('Error al cargar los datos de la tarea para edición', error);\n      });\n    } // Esta función se llamará cuando ocurra un cambio en los campos del formulario\n\n\n    isFormValid() {\n      return this.task.title && this.task.details && this.task.dueDate && this.task.priority;\n    }\n\n    onSubmit() {\n      const userId = this.appComponent.getUserID();\n\n      if (userId !== null) {\n        if (this.tareaParaEditar) {\n          // Estás actualizando una tarea existente\n          this.taskService.actualizarTarea(this.tareaParaEditar._id, this.task).subscribe(response => {\n            console.log('Tarea actualizada exitosamente', response); // Actualiza la tarea en la lista de tareas o realiza cualquier otra acción necesaria\n          }, error => {\n            console.error('Error al actualizar la tarea', error); // Manejar errores aquí\n          });\n        } else {\n          // Estás creando una nueva tarea\n          this.taskService.createTask(userId, this.task).subscribe(response => {\n            console.log('Tarea creada exitosamente', response); // Realiza cualquier acción necesaria para la creación de una nueva tarea\n          }, error => {\n            console.error('Error al crear la tarea', error); // Manejar errores aquí\n          });\n        }\n      } else {\n        console.error('El userId es nulo. No se puede crear ni actualizar la tarea sin un userId válido.');\n      }\n    }\n\n  }\n\n  CrearTareaComponent.ɵfac = function CrearTareaComponent_Factory(t) {\n    return new (t || CrearTareaComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.AppComponent), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  CrearTareaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrearTareaComponent,\n    selectors: [[\"app-crear-tarea\"]],\n    decls: 33,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"details\"], [\"id\", \"details\", \"name\", \"details\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dueDate\"], [\"type\", \"date\", \"id\", \"dueDate\", \"name\", \"dueDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"priority\"], [\"id\", \"priority\", \"name\", \"priority\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"alta\"], [\"value\", \"media\"], [\"value\", \"baja\"], [\"type\", \"submit\", \"routerLink\", \"/perfil\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"alert\", \"alert-success\"]],\n    template: function CrearTareaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function CrearTareaComponent_Template_form_submit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"T\\u00EDtulo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CrearTareaComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.task.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Detalles:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"textarea\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CrearTareaComponent_Template_textarea_ngModelChange_14_listener($event) {\n          return ctx.task.details = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Fecha de Vencimiento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function CrearTareaComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.task.dueDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 5)(20, \"label\", 12);\n        i0.ɵɵtext(21, \"Prioridad:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function CrearTareaComponent_Template_select_ngModelChange_22_listener($event) {\n          return ctx.task.priority = $event;\n        });\n        i0.ɵɵelementStart(23, \"option\", 14);\n        i0.ɵɵtext(24, \"Alta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 15);\n        i0.ɵɵtext(26, \"Media\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"option\", 16);\n        i0.ɵɵtext(28, \"Baja\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"button\", 17);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(31, \"br\");\n        i0.ɵɵtemplate(32, CrearTareaComponent_div_32_Template, 2, 1, \"div\", 18);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.tareaParaEditar ? \"Actualizar Tarea\" : \"Crear Tarea\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.details);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.dueDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.priority);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", !ctx.isFormValid());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.tareaParaEditar ? \"Actualizar Tarea\" : \"Crear Tarea\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tareaCreada);\n      }\n    },\n    dependencies: [i4.NgIf, i3.RouterLink, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&family=Quicksand:wght@400;600;700&family=Shadows+Into+Light&display=swap\\\";.card[_ngcontent-%COMP%]{margin:20px auto 0;border:1px solid #ccc;border-radius:5px;box-shadow:0 0 5px #0000001a}.card-header[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:10px}.card-body[_ngcontent-%COMP%]{padding:20px}.form-group[_ngcontent-%COMP%]{margin-bottom:15px}\"]\n  });\n  return CrearTareaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}